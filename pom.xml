<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
	</parent>

	<groupId>com.icims.labs.services</groupId>
	<artifactId>phoenix-magic-8-ball-microservice</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>phoenix-magic-8-ball-microservice-build</name>
	<description>phoenix-magic-8-ball-microservice Build</description>

	<properties>
		<!-- Build Properties -->
		<service.name>phoenix-magic-8-ball-microservice</service.name>
		<!-- Sonar Properties -->
		<sonar.junit.reportPaths>target/surefire-reports,target/failsafe-reports</sonar.junit.reportPaths>
		<sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco-it/jacoco.xml,target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<!-- Library Versions -->
		<newrelic.version>5.9.0</newrelic.version>
		<logstash-encoder.version>6.3</logstash-encoder.version>
		<flyway-spring-test.version>6.0.0</flyway-spring-test.version>
		<testcontainers.version>1.12.5</testcontainers.version>
		<!-- Plugin Versions -->
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
		<sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
		<postgresql.version>42.2.9</postgresql.version>
		<lombok.version>1.18.12</lombok.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.newrelic.agent.java</groupId>
				<artifactId>newrelic-api</artifactId>
				<version>${newrelic.version}</version>
			</dependency>
			<dependency>
				<groupId>com.newrelic.agent.java</groupId>
				<artifactId>newrelic-agent</artifactId>
				<version>${newrelic.version}</version>
			</dependency>
			<dependency>
				<groupId>org.flywaydb.flyway-test-extensions</groupId>
				<artifactId>flyway-spring-test</artifactId>
				<version>${flyway-spring-test.version}</version>
			</dependency>
			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-encoder.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>icims.releases</id>
			<name>iCIMS Releases</name>
			<url>https://artifactory.internal.icims.io/artifactory/libs-release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>icims.snapshots</id>
			<name>iCIMS Snapshots</name>
			<url>https://artifactory.internal.icims.io/artifactory/libs-snapshot</url>
			<snapshots />
		</repository>
		<repository>
			<id>icims.releases.old</id>
			<name>iCIMS Releases Old</name>
			<url>http://awdart01.dev.icims.net:8081/artifactory/libs-release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>icims.snapshots.old</id>
			<name>iCIMS Snapshots Old</name>
			<url>http://awdart01.dev.icims.net:8081/artifactory/libs-snapshot</url>
			<snapshots />
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>verify</goal>
								<goal>integration-test</goal>
							</goals>
							<configuration>
								<argLine>@{argLine}</argLine>
								<systemPropertyVariables>
									<java.security.egd>file:/dev/./urandom</java.security.egd>
								</systemPropertyVariables>
								<trimStackTrace>false</trimStackTrace>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<argLine>@{argLine}</argLine>
						<includes>
							<include>**/*Tests.java</include>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/*Abstract*.java</exclude>
						</excludes>
						<systemPropertyVariables>
							<java.security.egd>file:/dev/./urandom</java.security.egd>
						</systemPropertyVariables>
						<trimStackTrace>false</trimStackTrace>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>add-integration-sources</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/it/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>add-dockerfile</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/main/docker</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
								<outputDirectory>${project.basedir}/target/docker</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<append>true</append>
					</configuration>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>prepare-agent-integration</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
						</execution>
						<execution>
							<id>report-integration</id>
							<phase>verify</phase>
							<goals>
								<goal>report-integration</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<configuration>
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
						<useNativeGit>true</useNativeGit>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>phoenix-magic-8-ball-microservice-service</module>
		<module>phoenix-magic-8-ball-microservice-tests</module>
	</modules>
</project>
